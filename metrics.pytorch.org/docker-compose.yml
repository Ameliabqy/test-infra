version: '3.7'

services:
  grafana:
    image: grafana/grafana
    environment:
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
      GF_AUTH_ANONYMOUS_ENABLED: "1"
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    ports:
      - "3000:3000"
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    networks:
      - monitoring
    volumes:
      - /etc/pytorch/grafana:/var/lib/grafana
      - /etc/pytorch/grafana-provisioning/:/etc/grafana/provisioning

  timescaledb:
    image: timescale/timescaledb:latest-pg12
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    networks:
      - monitoring
    volumes:
      - /etc/pytorch/prometheus.yml:/etc/prometheus/prometheus.yml

  promscale:
    image: timescale/promscale:latest
    ports:
      - 9201:9201
    restart: on-failure
    depends_on:
      - timescaledb
      - prometheus
    networks:
      - monitoring
    environment:
      PROMSCALE_DB_CONNECT_RETRIES: 10
      PROMSCALE_WEB_TELEMETRY_PATH: /metrics-text
      PROMSCALE_DB_URI: postgres://postgres:root@timescaledb:5432/postgres?sslmode=allow

  # node_exporter:
  #   image: quay.io/prometheus/node-exporter
  #   ports:
  #     - "9100:9100"

  # influxdb:
  #   image: influxdb
  #   ports:
  #     - '8086:8086'
  #   networks:
  #     - monitoring
  #   volumes:
  #     - /etc/pytorch/influxdb:/var/lib/influxdb2
  #     - /etc/pytorch/influxdb-etc:/etc/influxdb2
  #   environment:
  #     # INFLUXDB_DB: db
  #     # INFLUXDB_ADMIN_USER: root
  #     # INFLUXDB_ADMIN_PASSWORD: rootroot2
  #     DOCKER_INFLUXDB_INIT_MODE: setup
  #     DOCKER_INFLUXDB_INIT_USERNAME: root
  #     DOCKER_INFLUXDB_INIT_PASSWORD: rootroot
  #     DOCKER_INFLUXDB_INIT_ORG: pytorch
  #     DOCKER_INFLUXDB_INIT_BUCKET: ci

  # mysql:
  #   image: mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root
  #   networks:
  #     - monitoring
  #   ports:
  #     - 3306:3306
  #   volumes:
  #     - /etc/pytorch/mysql:/var/lib/mysql

  nginx:
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"
    networks:
      - monitoring
    volumes:
        - "/etc/pytorch/http.conf:/etc/nginx/conf.d/default.conf"
        - "/etc/pytorch/nginx.conf:/etc/nginx/nginx.conf"
        - "/etc/pytorch/server.crt:/etc/nginx/fullchain.pem"
        - "/etc/pytorch/server.key:/etc/nginx/privkey.pem"

networks:
  monitoring:
    external: true
